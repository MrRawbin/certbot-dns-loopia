---
name: livetest

on:
  pull_request_review:
    types: [submitted]

jobs:
  preFlight:
    name: "Preflight Checks"
    runs-on: ubuntu-latest
    environment: live
    if: github.event.review.state == 'approved'
    steps:
    - name: Assert Secrets
      shell: bash
      run: |
        MD5() {
          result=($(md5sum <(echo "${1}")))
          echo $result
        }

        secretPresent() {
          emptyHash=$(MD5 "")
          secretHash=$(MD5 "${1}")
          ! diff <(echo $secretHash) <(echo $emptyHash) &> /dev/null
        }

        errorMessage() {
          echo "Your secret ${1} seems to be missing please contact the maintainers"
          return 1
        }

        secretStatus=0

        secretPresent "${{ secrets.TESTDOMAIN }}" || errorMessage "TESTDOMAIN" || secretStatus=1
        secretPresent "${{ secrets.DNS_LOOPIA_USER }}" || errorMessage "DNS_LOOPIA_USER" || secretStatus=2
        secretPresent "${{ secrets.DNS_LOOPIA_PASSWORD }}" || errorMessage "DNS_LOOPIA_PASSWORD" || secretStatus=3
        secretPresent "${{ secrets.EMAIL }}" || errorMessage "EMAIL" || secretStatus=4

        exit $secretStatus
    - run: echo "Everything Checks Out 👍"

  approved:
    needs: preFlight
    environment: live
    env:
      TESTDOMAIN: ${{ secrets.TESTDOMAIN }}
      EMAIL: ${{ secrets.EMAIL }}
    runs-on: ubuntu-latest
    if: github.event.review.state == 'approved'
    strategy:
      matrix:
        python-version: [ "3.10" ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Create virtual environment
        run: |
          python -m venv venv
          . venv/bin/activate
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      
      - name: create credentials
        if: env.TESTDOMAIN != null 
        run: |
          echo dns_loopia_user=${{secrets.DNS_LOOPIA_USER}}>credentials.ini
          echo dns_loopia_password=${{secrets.DNS_LOOPIA_PASSWORD}}>>credentials.ini
         
      - name: Run a live test
        if: env.TESTDOMAIN != null 
        run: |
          make test livetest
    
